"use strict";var ApplicationConfiguration=function(){var applicationModuleName="Nederlandse Rode Kruis Dashboards",applicationModuleVendorDependencies=["ngResource","ngRoute","ngCookies","ngTouch","ngSanitize","ui.router","ui.bootstrap","leaflet-directive","angular-lodash","gettext","AngularDc","formsAngular","angular-loading-bar"],registerModule=function(moduleName){angular.module(moduleName,[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("dashboards"),ApplicationConfiguration.registerModule("forms"),ApplicationConfiguration.registerModule("maps"),ApplicationConfiguration.registerModule("users"),angular.module("core").run(["gettextCatalog","Authentication",function(gettextCatalog,Authentication){var language="nl_NL",user=Authentication.user;user&&user.language&&""!==user.language&&(language=user.language.id),gettextCatalog.currentLanguage=language,gettextCatalog.debug=!0}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("otherwise",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}).state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},angular.element(document).on("click.nav",function(e){$(e.target).is("a")&&$(this).removeClass("in").addClass("collapse")})}]),angular.module("core").controller("HomeController",["$scope","Authentication","leafletData",function($scope,Authentication,leafletData){$scope.authentication=Authentication,angular.extend($scope,{defaults:{tileLayer:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",maxZoom:14,zoomControl:!1,path:{weight:10,color:"#800000",opacity:1}}}),angular.extend($scope,{layers:{baselayers:{osm:{name:"OpenStreetMap",url:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",type:"xyz",layerOptions:{showOnSelector:!1}}}}}),angular.extend($scope,{center:{lat:52.1185523,lng:5.2097174,zoom:10}}),leafletData.getMap().then(function(cartomap){cartomap.invalidateSize()})}]),angular.module("core").directive("heightresize",["$window",function($window){return{restrict:"A",link:function(scope,elem,attrs){var window=angular.element($window);scope.onResize=function(){$(elem).height($window.innerHeight-$(".navbar").height()-$(".mapHeader").height())},scope.onResize(),window.bind("resize",function(){scope.onResize(),scope.$apply()})}}}]).directive("logoresize",["$window",function($window){return{restrict:"A",link:function(scope,elem,attrs){var window=angular.element($window);scope.onResize=function(){$(elem).height(.75*(window.height()-$(".navbar").height()-$(".mapHeader").height()))},scope.onResize(),window.bind("resize",function(){scope.onResize(),scope.$apply()})}}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic,roles:roles||this.defaultRoles,shouldRender:shouldRender}),this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].menuItemURL===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.addMenu("topbar",!0)}]),angular.module("dashboards").run(["Menus","gettextCatalog",function(Menus,gettextCatalog){var title=gettextCatalog.getString("Dashboards");Menus.addMenuItem("topbar",title,"dashboards","/dashboards",!0)}]),angular.module("dashboards").config(["$stateProvider",function($stateProvider){$stateProvider.state("listDashboards",{url:"/dashboards",templateUrl:"modules/dashboards/views/list-dashboards.client.view.html"}).state("createDashboard",{url:"/dashboards/create",templateUrl:"modules/dashboards/views/create-dashboards.client.view.html"}).state("viewDashboard",{url:"/dashboards/:dashboardId/:templateUrl",templateUrl:function($stateParams){return"modules/dashboards/views/"+$stateParams.templateUrl+".client.view.html"}}).state("editDashboard",{url:"/dashboards/:dashboardId/edit",templateUrl:"modules/dashboards/views/edit-dashboards.client.view.html"})}]),angular.module("dashboards").controller("DashboardsController",["$scope","$stateParams","$location","Authentication","Dashboards","CartoDB","$sce","$interval","$window",function($scope,$stateParams,$location,Authentication,Dashboards,CartoDB,$sce,$interval,$window){$scope.authentication=Authentication;var window=angular.element($window);$scope.create=function(){var dashboard=new Dashboards({name:this.name,description:this.description,url:this.url});dashboard.$save(function(response){$location.path("dashboards/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.name="",this.description="",this.url=""},$scope.remove=function(dashboard){if(dashboard){dashboard.$remove();for(var i in $scope.dashboards)$scope.dashboards[i]===dashboard&&$scope.dashboards.splice(i,1)}else $scope.dashboard.$remove(function(){$location.path("dashboards")})},$scope.update=function(){var dashboard=$scope.dashboard;dashboard.$update(function(){$location.path("dashboards/"+dashboard._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.dashboards=Dashboards.query()},$scope.findOne=function(){$scope.dashboard=Dashboards.get({dashboardId:$stateParams.dashboardId})},$scope.onResize=function(){var newHeight=$("window").innerHeight-$(".navbar").height()-$(".dashboardHeader").height();$(".dashboardVerticalStretch").css("height",newHeight),$(".dashboardVerticalStretch").css("minHeight",newHeight)},$scope.onResize(),window.bind("resize",function(){$scope.onResize()})}]),angular.module("dashboards").controller("DistrictDashboardsController",["$scope","$q","Authentication","Dashboards","Data","Sources","$window","$stateParams","cfpLoadingBar","_",function($scope,$q,Authentication,Dashboards,Data,Sources,$window,$stateParams,cfpLoadingBar,_){$scope.authentication=Authentication,$scope.geom=null,$scope.metric="risk_score",$scope.metric_label="",$scope.metric_year="",$scope.metric_source="",$scope.metric_desc="",$scope.admlevel=2,$scope.admlevel_text="Provinces",$scope.name_selection="The Philippines",$scope.type_selection="Country",$scope.subtype_selection="Provinces",$scope.parent_code="";var map,data_input="";$scope.config={whereFieldName:"pcode",joinAttribute:"pcode",nameAttribute:"name",color:"#0080ff"},$scope.start=function(){cfpLoadingBar.start()},$scope.complete=function(){cfpLoadingBar.complete()},$scope.initiate=function(){$scope.start(),data_input=$scope.admlevel+",'"+$scope.parent_code,Dashboards.get({dashboardId:$stateParams.dashboardId},function(dashboard){Data.get({adminLevel:data_input},function(pgData){$scope.prepare(dashboard,pgData)})},function(error){console.log(error)})},$scope.prepare=function(dashboard,pgData){$scope.title=$scope.config.title,$scope.mapChartType="leafletChoroplethChart",$scope.geom=pgData.usp_data.geo;var d={};d.Districts=pgData.usp_data.geo,d.Rapportage=pgData.usp_data.ind,d.Metadata=dashboard.sources.Metadata.data,$scope.generateCharts(d),$scope.complete()},$scope.genLookup=function(field){var lookup={};return $scope.geom.features.forEach(function(e){lookup[e.properties[$scope.config.joinAttribute]]=String(e.properties[field])}),lookup},$scope.genLookup_ind=function(d,field){var lookup_ind={};return d.Rapportage.forEach(function(e){lookup_ind[e.pcode]=String(e[field])}),lookup_ind},$scope.genLookup_meta=function(d,field){var lookup_meta={};return d.Metadata.forEach(function(e){lookup_meta[e.variable]=String(e[field])}),lookup_meta},$scope.deepFind=function(obj,path){var i,paths=path.split("."),current=obj;for(i=0;i<paths.length;++i){if(void 0===current[paths[i]])return;current=current[paths[i]]}return current},$scope.generateCharts=function(d){function zoomToGeom(geom){var bounds=d3.geo.bounds(geom);map.fitBounds([[bounds[0][1],bounds[0][0]],[bounds[1][1],bounds[1][0]]])}dc.chartRegistry.clear(),void 0!==map&&map.remove();var mapChart=dc.leafletChoroplethChart("#map-chart"),lookup=$scope.genLookup($scope.config.nameAttribute),lookup_muncity=$scope.genLookup_ind(d,"mun_city"),meta_label=$scope.genLookup_meta(d,"label"),meta_format=$scope.genLookup_meta(d,"format"),meta_unit=$scope.genLookup_meta(d,"unit"),meta_icon=$scope.genLookup_meta(d,"icon_src"),meta_year=$scope.genLookup_meta(d,"year"),meta_source=$scope.genLookup_meta(d,"source_link"),meta_desc=$scope.genLookup_meta(d,"description");2===$scope.admlevel?($scope.type_selection="Country",$scope.subtype_selection="Provinces"):3===$scope.admlevel?($scope.type_selection="Province",$scope.subtype_selection="Municipalities"):4===$scope.admlevel&&($scope.type_selection="Municipality",$scope.subtype_selection="Barangays");var cf=crossfilter(d.Rapportage),parentDim=cf.dimension(function(d){return d.pcode_parent}),whereDimension=cf.dimension(function(d){return d.pcode}),whereGroupSum=whereDimension.group().reduceSum(function(d){return d[$scope.metric]}),reduceAddAvg=function(metric){return function(p,v){return p.sumOfSub+=v[metric]*v.population,p.sumOfTotal+=v.population,p.finalVal=p.sumOfSub/p.sumOfTotal,p}},reduceRemoveAvg=function(metric){return function(p,v){return p.sumOfSub-=v[metric]*v.population,p.sumOfTotal-=v.population,p.finalVal=p.sumOfSub/p.sumOfTotal,p}},reduceInitialAvg=function(){return{sumOfSub:0,sumOfTotal:0,finalVal:0}},totaalDim=cf.dimension(function(i){return"Total"}),risk_score=totaalDim.group().reduce(reduceAddAvg("risk_score"),reduceRemoveAvg("risk_score"),reduceInitialAvg),vulnerability_score=totaalDim.group().reduce(reduceAddAvg("vulnerability_score"),reduceRemoveAvg("vulnerability_score"),reduceInitialAvg),hazard_score=totaalDim.group().reduce(reduceAddAvg("hazard_score"),reduceRemoveAvg("hazard_score"),reduceInitialAvg),coping_capacity_score=totaalDim.group().reduce(reduceAddAvg("coping_capacity_score"),reduceRemoveAvg("coping_capacity_score"),reduceInitialAvg),population=totaalDim.group().reduceSum(function(d){return d.population}),land_area=totaalDim.group().reduceSum(function(d){return d.land_area}),mun_city=totaalDim.group().reduceSum(function(d){return d.mun_city}),poverty_incidence=totaalDim.group().reduce(reduceAddAvg("poverty_incidence"),reduceRemoveAvg("poverty_incidence"),reduceInitialAvg),income_class=totaalDim.group().reduce(reduceAddAvg("income_class"),reduceRemoveAvg("income_class"),reduceInitialAvg),gdp_per_capita=totaalDim.group().reduce(reduceAddAvg("gdp_per_capita"),reduceRemoveAvg("gdp_per_capita"),reduceInitialAvg),hdi=totaalDim.group().reduce(reduceAddAvg("hdi"),reduceRemoveAvg("hdi"),reduceInitialAvg),flood_risk=totaalDim.group().reduce(reduceAddAvg("flood_risk"),reduceRemoveAvg("flood_risk"),reduceInitialAvg),cyclone_risk=totaalDim.group().reduce(reduceAddAvg("cyclone_risk"),reduceRemoveAvg("cyclone_risk"),reduceInitialAvg),landslide_risk=totaalDim.group().reduce(reduceAddAvg("landslide_risk"),reduceRemoveAvg("landslide_risk"),reduceInitialAvg),earthquake7_phys_exp=totaalDim.group().reduce(reduceAddAvg("earthquake7_phys_exp"),reduceRemoveAvg("earthquake7_phys_exp"),reduceInitialAvg),tsunami_phys_exp=totaalDim.group().reduce(reduceAddAvg("tsunami_phys_exp"),reduceRemoveAvg("tsunami_phys_exp"),reduceInitialAvg),cyclone_surge_2m_phys_exp=totaalDim.group().reduce(reduceAddAvg("cyclone_surge_2m_phys_exp"),reduceRemoveAvg("cyclone_surge_2m_phys_exp"),reduceInitialAvg),nr_facilities=totaalDim.group().reduceSum(function(d){return d.nr_facilities}),nr_doctors=totaalDim.group().reduceSum(function(d){return d.nr_doctors}),good_governance_index=totaalDim.group().reduce(reduceAddAvg("good_governance_index"),reduceRemoveAvg("good_governance_index"),reduceInitialAvg),traveltime=totaalDim.group().reduce(reduceAddAvg("traveltime"),reduceRemoveAvg("traveltime"),reduceInitialAvg),all=cf.groupAll();dc.dataCount("#count-info").dimension(cf).group(all);var dec0Format=(d3.format(","),d3.format(",.0f")),dec2Format=d3.format(".2f"),percFormat=d3.format(",.1%");3===$scope.admlevel&&parentDim.filter(function(d){return d===$scope.parent_code?d:void 0}),mapChart.width($("#map-chart").width()).height(800).dimension(whereDimension).group(whereGroupSum).center([0,0]).zoom(0).geojson(d.Districts).colors(d3.scale.quantile().domain([d3.min(d.Rapportage,function(d){return d[$scope.metric]}),d3.max(d.Rapportage,function(d){return d[$scope.metric]})]).range(["#f1eef6","#bdc9e1","#74a9cf","#2b8cbe","#045a8d"])).colorCalculator(function(d){return d>0?mapChart.colors()(d):"#cccccc"}).featureKeyAccessor(function(feature){return feature.properties.pcode}).popup(function(d){return lookup[d.key].concat(" - ",meta_label[$scope.metric],": ",d.value)}).renderPopup(!0).turnOnControls(!0).on("filtered",function(chart,filters){filters=chart.filters(),filters.length>0&&$scope.admlevel<4&&($scope.admlevel=$scope.admlevel+1,$scope.parent_code_prev=$scope.parent_code,$scope.parent_code=filters[0],4===$scope.admlevel&&($scope.metric="population"),$scope.name_selection=lookup[$scope.parent_code],$scope.initiate())}),$scope.go=function(id){$scope.metric=id,$scope.metric_label=meta_label[$scope.metric],$scope.metric_year=meta_year[$scope.metric],$scope.metric_source=meta_source[$scope.metric],$scope.metric_desc=meta_desc[$scope.metric],$("#myModal").modal("show"),whereGroupSum.dispose(),whereGroupSum=whereDimension.group().reduceSum(function(d){return d[id]}),mapChart.group(whereGroupSum).colors(d3.scale.quantile().domain([d3.min(d.Rapportage,function(d){return d[id]}),d3.max(d.Rapportage,function(d){return d[id]})]).range(["#f1eef6","#bdc9e1","#74a9cf","#2b8cbe","#045a8d"])).colorAccessor(function(d){return d>0?d:0}),dc.filterAll(),dc.redrawAll()},$scope.level_up=function(){$scope.admlevel>2&&($scope.admlevel=$scope.admlevel-1,$scope.parent_code=$scope.parent_code_prev,$scope.initiate())},$scope.go_left=function(){0===$("div.active").index()?$scope.go("nr_facilities"):1===$("div.active").index()?$scope.go("risk_score"):2===$("div.active").index()?$scope.go("population"):3===$("div.active").index()?$scope.go("poverty_incidence"):4===$("div.active").index()&&$scope.go("flood_risk")},$scope.go_right=function(){3===$("div.active").index()?$scope.go("nr_facilities"):4===$("div.active").index()?$scope.go("risk_score"):0===$("div.active").index()?$scope.go("population"):1===$("div.active").index()?$scope.go("poverty_incidence"):2===$("div.active").index()&&$scope.go("flood_risk")};for(var tables=[{id:"#data-table2",name:"risk_score",datatype:"decimal2",group:"score",propertyPath:"value.finalVal",dimension:risk_score},{id:"#data-table3",name:"vulnerability_score",datatype:"decimal2",group:"score",propertyPath:"value.finalVal",dimension:vulnerability_score},{id:"#data-table4",name:"hazard_score",datatype:"decimal2",group:"score",propertyPath:"value.finalVal",dimension:hazard_score},{id:"#data-table5",name:"coping_capacity_score",datatype:"decimal2",group:"score",propertyPath:"value.finalVal",dimension:coping_capacity_score},{id:"#data-table6",name:"population",datatype:"integer",group:"general",propertyPath:"value",dimension:population},{id:"#data-table7",name:"land_area",datatype:"integer",group:"general",propertyPath:"value",dimension:land_area},{id:"#data-table8",name:"mun_city",datatype:"number",group:"general",propertyPath:"value",dimension:mun_city},{id:"#data-table9",name:"poverty_incidence",datatype:"percentage",group:"vulnerability",propertyPath:"value.finalVal",dimension:poverty_incidence},{id:"#data-table10",name:"income_class",datatype:"decimal2",group:"vulnerability",propertyPath:"value.finalVal",dimension:income_class},{id:"#data-table11",name:"gdp_per_capita",datatype:"integer",group:"vulnerability",propertyPath:"value.finalVal",dimension:gdp_per_capita},{id:"#data-table12",name:"hdi",datatype:"decimal2",group:"vulnerability",propertyPath:"value.finalVal",dimension:hdi},{id:"#data-table13",name:"flood_risk",datatype:"decimal2",group:"hazard",propertyPath:"value.finalVal",dimension:flood_risk},{id:"#data-table14",name:"cyclone_risk",datatype:"decimal2",group:"hazard",propertyPath:"value.finalVal",dimension:cyclone_risk},{id:"#data-table15",name:"landslide_risk",datatype:"decimal2",group:"hazard",propertyPath:"value.finalVal",dimension:landslide_risk},{id:"#data-table16",name:"earthquake7_phys_exp",datatype:"decimal2",group:"hazard",propertyPath:"value.finalVal",dimension:earthquake7_phys_exp},{id:"#data-table17",name:"tsunami_phys_exp",datatype:"decimal2",group:"hazard",propertyPath:"value.finalVal",dimension:tsunami_phys_exp},{id:"#data-table18",name:"cyclone_surge_2m_phys_exp",datatype:"decimal2",group:"hazard",propertyPath:"value.finalVal",dimension:cyclone_surge_2m_phys_exp},{id:"#data-table19",name:"nr_facilities",datatype:"integer",group:"capacity",propertyPath:"value",dimension:nr_facilities},{id:"#data-table20",name:"nr_doctors",datatype:"integer",group:"capacity",propertyPath:"value",dimension:nr_doctors},{id:"#data-table21",name:"good_governance_index",datatype:"decimal2",group:"capacity",propertyPath:"value.finalVal",dimension:good_governance_index},{id:"#data-table22",name:"traveltime",datatype:"integer",group:"capacity",propertyPath:"value.finalVal",dimension:traveltime}],tables2=[],i=2;i<d.Metadata.length;i++){var record={};record.name=d.Metadata[i.variable],tables2[i-2]=record}console.log(tables2),tables.forEach(function(t){dc.dataTable(t.id).dimension(t.dimension).group(function(i){return""}).columns([function(d){return'<img src="modules/dashboards/img/'+meta_icon[t.name]+'" width="20">'},function(d){return meta_label[t.name]},function(d){return"mun_city"===t.name?lookup_muncity[t.key]:isNaN($scope.deepFind(d,t.propertyPath))?"N.A. on this level":"decimal0"===meta_format[t.name]?dec0Format($scope.deepFind(d,t.propertyPath)):"percentage"===meta_format[t.name]?percFormat($scope.deepFind(d,t.propertyPath)):"decimal2"===meta_format[t.name]?dec2Format($scope.deepFind(d,t.propertyPath)):void 0},function(d){return meta_unit[t.name]}]).title(function(d){return lookup[t.name]}).order(d3.descending)}),3===$scope.admlevel&&parentDim.filter(function(d){return d===$scope.parent_code?d:void 0}),dc.renderAll(),map=mapChart.map(),zoomToGeom($scope.geom)}}]),angular.module("dashboards").directive("heightresize",["$window",function($window){return{restrict:"A",link:function(scope,elem,attrs){var window=angular.element($window);scope.onResize=function(){$(elem).height($window.innerHeight-$(".navbar").height()-$(".monitorHeader").height())},scope.onResize(),window.bind("resize",function(){scope.onResize(),scope.$apply()})}}}]),angular.module("dashboards").factory("CartoDB",["$resource",function($resource){return $resource("/cartodb/:table",{table:"@_id"},{update:{method:"PUT"}})}]),angular.module("dashboards").factory("Dashboards",["$resource",function($resource){return $resource("dashboards/:dashboardId",{dashboardId:"@_id"},{update:{method:"PUT"}})}]),angular.module("dashboards").factory("Data",["$resource",function($resource){return $resource("data/:adminLevel",{adminLevel:"@_id"})}]),angular.module("dashboards").factory("Dropbox",["$resource",function($resource){return $resource("/dropbox/:file",{file:"@_id"},{update:{method:"PUT"}})}]),angular.module("dashboards").factory("GoogleSpreadsheet",["$resource",function($resource){return $resource("/googlespreadsheet/:id",{id:"@_id"},{update:{method:"PUT"}})}]),angular.module("dashboards").factory("Sources",["$resource",function($resource){return $resource("/sources/:id",{id:"@_id"})}]),angular.module("dashboards").run(["Menus","gettextCatalog",function(Menus,gettextCatalog){var title=gettextCatalog.getString("Data management");Menus.addMenuItem("topbar",title,"forms","forms",!0)}]),angular.module("formsAngular").config(["cssFrameworkServiceProvider",function(cssFrameworkService){cssFrameworkService.setOptions({framework:"bs3"})}]),angular.module("forms").config(["routingServiceProvider",function(routingService){routingService.start({html5Mode:!1,routing:"uirouter",prefix:"/forms",hashPrefix:"!",templatePath:"modules/forms/views/",fixedRoutes:[{route:"/forms",state:"model::all",templateUrl:"modules/forms/views/list-forms.html"}]})}]),angular.module("forms").controller("FormsController",["$scope","$stateParams","$location","Authentication","Forms",function($scope,$stateParams,$location,Authentication,Forms){$scope.authentication=Authentication,$scope.find=function(){$scope.forms=Forms.query()}}]),angular.module("forms").factory("Forms",["$resource",function($resource){return $resource("api/models",{},{query:{method:"GET",isArray:!0}})}]),angular.module("maps").run(["Menus","gettextCatalog",function(Menus,gettextCatalog){var title=gettextCatalog.getString("Maps");Menus.addMenuItem("topbar",title,"maps","/maps",!0)}]),angular.module("maps").config(["$stateProvider",function($stateProvider){$stateProvider.state("listMaps",{url:"/maps",templateUrl:"modules/maps/views/list-maps.client.view.html"}).state("createMap",{url:"/maps/create",templateUrl:"modules/maps/views/create-map.client.view.html"}).state("proxy",{url:"/maps/proxy/:url",templateUrl:"modules/maps/views/create-map.client.view.html"}).state("viewMap",{url:"/maps/:mapId",templateUrl:"modules/maps/views/view-map.client.view.html"}).state("viewMapCenter",{url:"/maps/:mapId/:centerLat/:centerLng/:centerZoom/:activeLayers",templateUrl:"modules/maps/views/view-map.client.view.html"}).state("editMap",{url:"/maps/:mapId/edit",templateUrl:"modules/maps/views/edit-map.client.view.html"}).state("icons",{url:"/icons",templateUrl:"modules/maps/views/icons.client.view.html"})}]),angular.module("maps").controller("MapsController",["$scope","$stateParams","$location","Authentication","Maps","$window","leafletData","$compile","$parse","Proxy","$modal","_",function($scope,$stateParams,$location,Authentication,Maps,$window,leafletData,$compile,$parse,Proxy,$modal,_){$scope.authentication=Authentication,$scope.L=$window.L,$scope.cartodb=$window.cartodb,$scope.LMap=null,$scope.subLayers=[],$scope.bounds=null,$scope.overlayLayers={},$scope.activeLayers=[],$scope.baseLayers={},$scope.wmsLegends=[],$scope.wfsLegends=[],$scope.visualisationLegends=[],$scope.infos={},$scope.mapCenter={},$scope.baseUrl=$location.absUrl().substring(0,$location.absUrl().length-$location.path().length),$scope.mapParameters=$location.path().split("/").slice(0,3).join("/"),$scope.columns=4,$scope.defaults.tileLayer="",$scope.create=function(){var map=new Maps({title:this.title});map.$save(function(response){$location.path("maps/"+response._id)},function(errorResponse){$scope.addAlert("danger",errorResponse.data.message)}),this.title=""},$scope.remove=function(map){if(map){map.$remove();for(var i in $scope.maps)$scope.maps[i]===map&&$scope.maps.splice(i,1)}else $scope.map.$remove(function(){$location.path("maps")})},$scope.update=function(){var map=$scope.map;map.$update(function(){$location.path("maps/"+map._id)},function(errorResponse){$scope.addAlert("danger",errorResponse.data.message)})},$scope.categories=[];var findCategories=function(){angular.forEach($scope.maps,function(value,category){null!==value.category&&-1===$scope.categories.indexOf(value.category.name)&&$scope.categories.push(value.category.name)})};$scope.find=function(){Maps.query(function(data){$scope.maps=data,findCategories(),$scope.prepareMapsList()},function(error){$scope.addAlert("danger",error.data.message)})},$scope.$watch("showCategory",function(){$scope.prepareMapsList()}),$scope.findOne=function(){Maps.get({mapId:$stateParams.mapId},function(data){$scope.map=data},function(error){$scope.addAlert("danger",error.data.message)})},$scope.addActiveLayer=function(id){-1===$scope.activeLayers.indexOf(id)&&$scope.activeLayers.push(id)},$scope.deleteActiveLayer=function(id){var index=$scope.activeLayers.indexOf(id);index>-1&&$scope.activeLayers.splice(index,1)},$scope.prepareMapsList=function(){if("undefined"!=typeof $scope.maps){var newArr=$scope.maps,filteredArr=newArr;"undefined"!=typeof $scope.showCategory&&" "!==$scope.showCategory&&(filteredArr=_.filter(newArr,function(map){return"undefined"==typeof map.category||null===map.category?!1:map.category.name===$scope.showCategory}));var sorted=_.sortBy(filteredArr,function(map){return map.title.toLowerCase()});$scope.splitMaps=[];for(var i=0;i<sorted.length;i+=$scope.columns)$scope.splitMaps.push(sorted.slice(i,i+$scope.columns))}},$scope.alerts=[],$scope.addAlert=function(messageType,message){$scope.alerts.push({type:messageType,msg:message})},$scope.closeAlert=function(index){$scope.alerts.splice(index,1)},$scope.loadSearchControl=function(cartomap){function googleGeocoding(text,callResponse){geocoder.geocode({address:text},callResponse)}function filterJSONCall(rawjson){var key,loc,json={};for(var i in rawjson)key=rawjson[i].formatted_address,loc=$scope.L.latLng(rawjson[i].geometry.location.lat(),rawjson[i].geometry.location.lng()),json[key]=loc;return json}var geocoder=new google.maps.Geocoder;cartomap.addControl(new $scope.L.Control.Search({container:"findbox",text:"Zoeken...",textCancel:"Cancel",textErr:"Locatie niet gevonden",sourceData:googleGeocoding,formatData:filterJSONCall,markerLocation:!0,autoType:!1,autoCollapse:!0,minLength:2}))};var addVisualisation=function(cartomap,visualisation){$scope.cartodb.createLayer(cartomap,visualisation.apiUrl,{https:!0,legends:!1}).addTo(cartomap).on("done",function(layer){if(layer.setInteraction(!0),layer.setZIndex(visualisation.zindex),layer.layer_name=visualisation.name,layer.parentId=visualisation._id,layer.options.visible=visualisation.visible,visualisation.visible?$scope.addActiveLayer(visualisation._id):$scope.LMap.removeLayer(layer),$scope.overlayLayers[visualisation.name]=layer,layer.layers[0].hasOwnProperty("legend")&&"none"!==layer.layers[0].legend.type){var legend={},cartoLegend=layer.layers[0].legend;cartoLegend.data=cartoLegend.items;var rendered=new cdb.geo.ui.Legend(cartoLegend).render().el;legend.html=rendered.outerHTML,legend.name=visualisation.name,$scope.visualisationLegends.push(legend)}layer.on("featureOver",function(e,pos,latlng,data){$scope.cartodb.log.log(e,pos,latlng,data)}),layer.on("error",function(err){$scope.cartodb.log.log("error: "+err)})}).on("error",function(){$scope.cartodb.log.log("some error occurred")})},addWmsLayer=function(cartomap,wmsLayer){var wms=null;if(wms=wmsLayer.tiled?wmsLayer.featureInfo?$scope.L.tileLayer.betterWms(wmsLayer.url,{layers:wmsLayer.layers,format:wmsLayer.format,transparent:wmsLayer.transparent,version:wmsLayer.version}):$scope.L.tileLayer.wms(wmsLayer.url,{layers:wmsLayer.layers,format:wmsLayer.format,transparent:wmsLayer.transparent,version:wmsLayer.version}):new $scope.L.NonTiledLayer.WMS(wmsLayer.url,{layers:wmsLayer.layers,format:wmsLayer.format,transparent:wmsLayer.transparent,version:wmsLayer.version,pane:cartomap.getPanes().tilePane,zIndex:wmsLayer.zindex,opacity:wmsLayer.opacity},wmsLayer.featureInfo),null!==wms){wms.addTo(cartomap),wms.setZIndex(wmsLayer.zindex),wms.layer_name=wmsLayer.name,wms.parentId=wmsLayer._id,wms.options.visible=wmsLayer.visible,wmsLayer.visible?$scope.addActiveLayer(wmsLayer._id):$scope.LMap.removeLayer(wms),$scope.overlayLayers[wmsLayer.name]=wms;var legendOptions=wmsLayer.legendOptions;""!==wmsLayer.legendOptions&&(legendOptions=JSON.parse(wmsLayer.legendOptions));var legends=wms.getLegendGraphic(legendOptions),legend={};for(var l in legends)legend.url=legends[l],legend.name=wmsLayer.name,$scope.wmsLegends.push(legend)}},addWfsLayer=function(cartomap,wfsLayer){function style(feature){return{weight:wfsLayer.featureStyle.weight,opacity:wfsLayer.featureStyle.opacity,color:wfsLayer.featureStyle.color,dashArray:wfsLayer.featureStyle.dashArray,fillOpacity:wfsLayer.featureStyle.fillOpacity,fillColor:wfsLayer.featureStyle.fillColor}}function featureUrl(wfsLayer){var crsString="",crs="";wfsLayer.crs.length>0&&(crs=wfsLayer.crs[0],crs.indexOf("EPSG")>-1&&crs.indexOf(!1)&&(crs=[crs.slice(0,4),":",crs.slice(4)].join("")),crsString="&srsName="+crs);var bboxString="";if(null!==$scope.bounds){var bboxCrs="";""!==crs&&(bboxCrs=","+crs),bboxString="&BBOX="+$scope.bounds.toBBoxString()+bboxCrs}return encodeURIComponent(wfsLayer.url+"?request=GetFeature&outputformat=json&version="+wfsLayer.version+"&typeName="+wfsLayer.featureType+crsString+bboxString)}function onEachFeature(feature,layer){feature.properties&&feature.properties[wfsLayer.hoverProperty]&&layer.bindPopup(feature.properties[wfsLayer.hoverProperty])}function pointToLayer(feature,latlng){return $scope.L.circleMarker(latlng,geojsonMarkerOptions)}var geojsonMarkerOptions={radius:wfsLayer.markerStyle.radius,fillColor:wfsLayer.markerStyle.fillColor,color:wfsLayer.markerStyle.color,weight:wfsLayer.markerStyle.weight,opacity:wfsLayer.markerStyle.opacity,fillOpacity:wfsLayer.markerStyle.fillOpacity};$scope.loading=Proxy.get({url:featureUrl(wfsLayer)}).$promise.then(function(response){response.type&&"FeatureCollection"===response.type&&$scope.L.geoJson(response,{pointToLayer:pointToLayer,style:style,onEachFeature:onEachFeature}).addTo(cartomap).on("done",function(layer){layer.setZIndex(wfsLayer.zindex),layer.layer_name=wfsLayer.name,layer.parentId=wfsLayer._id,layer.options.visible=wfsLayer.visible,wfsLayer.visible?$scope.addActiveLayer(wfsLayer._id):$scope.LMap.removeLayer(layer),$scope.overlayLayers[wfsLayer.name]=layer})})};$scope.loadLayers=function(){leafletData.getMap().then(function(cartomap){$scope.LMap=cartomap,cartomap.on("moveend",function(){$scope.bounds=cartomap.getBounds();var center=cartomap.getCenter(),zoom=cartomap.getZoom();$scope.mapCenter.lat=center.lat,$scope.mapCenter.lng=center.lng,$scope.mapCenter.zoom=zoom});var gpsStyle={radius:3,weight:8,color:"#4C87C7",fill:!0,opacity:1};cartomap.addControl(new $scope.L.Control.Gps({style:gpsStyle})),Maps.get({mapId:$stateParams.mapId}).$promise.then(function(map){var baseMap=map.baseMap;if(void 0!==map.baseMap&&null!==map.baseMap){var layer=$scope.L.tileLayer(baseMap.url,{attribution:'&copy; <a href="http://www.rodekruis.nl" target="_new">Rode Kruis</a>'});cartomap.addLayer(layer),layer.layer_name=baseMap.name,
layer.setZIndex(1),$scope.baseLayers[baseMap.name]=layer}$stateParams.centerLat&&$stateParams.centerLng&&$stateParams.centerZoom?cartomap.setView(new $scope.L.latLng($stateParams.centerLat,$stateParams.centerLng),$stateParams.centerZoom):($scope.mapCenter=map.mapCenter,cartomap.setView(new $scope.L.latLng($scope.mapCenter.lat,$scope.mapCenter.lng),$scope.mapCenter.zoom)),$scope.infos.title=map.title,$scope.infos.info=map.description,$scope.infos.layers=[];var urlLayersSet=!1,activeLayers=[];$stateParams.activeLayers&&(activeLayers=$stateParams.activeLayers.split(","),urlLayersSet=!0);for(var vId in map.visualisation){var visualisation=map.visualisation[vId];urlLayersSet&&(activeLayers.indexOf(visualisation._id)>-1?visualisation.visible=!0:visualisation.visible=!1),addVisualisation(cartomap,visualisation),$scope.infos.layers.push({title:visualisation.name,info:visualisation.description})}for(var wmsId in map.wmsLayer){var wmsLayer=map.wmsLayer[wmsId];urlLayersSet&&(activeLayers.indexOf(map.wmsLayer[wmsId]._id)>-1?wmsLayer.visible=!0:wmsLayer.visible=!1),addWmsLayer(cartomap,wmsLayer),$scope.infos.layers.push({title:wmsLayer.name,info:wmsLayer.description})}for(var wfsId in map.wfsLayer){var wfsLayer=map.wfsLayer[wfsId];urlLayersSet&&(activeLayers.indexOf(map.wfsLayer[wfsId]._id)>-1?wfsLayer.visible=!0:wfsLayer.visible=!1),addWfsLayer(cartomap,wfsLayer),$scope.infos.layers.push({title:wfsLayer.name,info:wfsLayer.description})}}),cartomap.invalidateSize(),$scope.loadSearchControl(cartomap)}),$scope.toggleLayer=function(layer,e){e.preventDefault(),e.stopPropagation(),$scope.LMap.hasLayer(layer)?($scope.LMap.removeLayer(layer),layer.options.visible=!1,$scope.deleteActiveLayer(layer.parentId)):($scope.LMap.addLayer(layer),layer.options.visible=!0,$scope.addActiveLayer(layer.parentId))}}}]),angular.module("maps").directive("layermenu",function($compile){return{template:"<div></div>",replace:!0,link:function(scope,element){var container=scope.menuContainer;$compile(container)(scope),element.append(container)}}}).directive("htmlparse",[function($compile,$parse){return{template:"<div></div>",restrict:"E",link:function(scope,element,attr){$parse(attr.content)(scope),element.html=angular.element($parse(attr.content)(scope));var test=$compile(element)(scope);element.append(test)}}}]).directive("ngLegendClick",["$modal",function($modal,$compile,$parse){var ModalInstanceCtrl=function($scope,$modalInstance,wmsLegends,wfsLegends,visualisationLegends){$scope.wmsLegends=wmsLegends,$scope.wfsLegends=wfsLegends,$scope.visualisationLegends=visualisationLegends,$scope.ok=function(){$modalInstance.close()}};return{restrict:"A",scope:!0,link:function(scope,element,attrs){element.bind("click",function(){var modalInstance=$modal.open({templateUrl:"modules/maps/views/legends.client.template.html",controller:ModalInstanceCtrl,size:scope.size,resolve:{wmsLegends:function(){return scope.wmsLegends},wfsLegends:function(){return scope.wfsLegends},visualisationLegends:function(){return scope.visualisationLegends}}});modalInstance.result.then(function(){},function(){})})}}}]).directive("ngInfoClick",["$modal",function($modal,$compile,$parse){var ModalInstanceCtrl=function($scope,$modalInstance,infos){$scope.infos=infos,$scope.ok=function(){$modalInstance.close()}};return{restrict:"A",scope:!0,link:function(scope,element,attrs){element.bind("click",function(){var modalInstance=$modal.open({templateUrl:"modules/maps/views/infos.client.template.html",controller:ModalInstanceCtrl,size:scope.size,resolve:{infos:function(){return scope.infos}}});modalInstance.result.then(function(){},function(){})})}}}]).directive("ngShareClick",["$modal",function($modal,$compile,$parse){var ModalInstanceCtrl=function($scope,$modalInstance,mapCenter,baseUrl,mapParameters,activeLayers){$scope.mapCenter=mapCenter,$scope.baseUrl=baseUrl,$scope.mapParameters=mapParameters,$scope.activeLayers=activeLayers,$scope.ok=function(){$modalInstance.close()}};return{restrict:"A",scope:!0,link:function(scope,element,attrs){element.bind("click",function(){var modalInstance=$modal.open({templateUrl:"modules/maps/views/share.client.template.html",controller:ModalInstanceCtrl,size:scope.size,resolve:{mapCenter:function(){return scope.mapCenter},baseUrl:function(){return scope.baseUrl},mapParameters:function(){return scope.mapParameters},activeLayers:function(){return scope.activeLayers.join(",")}}});modalInstance.result.then(function(){},function(){})})}}}]).directive("heightresize",["$window",function($window,$rootScope){return{restrict:"A",link:function(scope,elem,attrs){var window=angular.element($window);scope.onResize=function(){$(elem).height(window.height()-$(".navbar").height()-$(".mapHeader").height()),"undefined"!=typeof $rootScope&&$rootScope.hasOwnProperty("LMap")&&$rootScope.LMap.invalidateSize()},scope.onResize(),window.bind("resize",function(){scope.onResize(),scope.$apply()})}}}]),angular.module("maps").filter("unsafehtml",["$sce",function($sce){return function(input){return $sce.trustAsHtml(input)}}]).filter("unsafesource",["$sce",function($sce){return function(input){return $sce.trustAsResourceUrl(input)}}]),angular.module("maps").factory("_",["$window",function($window){return $window._}]).factory("Maps",["$resource",function($resource){return $resource("maps/:mapId",{mapsId:"@_id"},{update:{method:"PUT"}})}]).factory("Proxy",["$resource",function($resource){return $resource("proxy/:url",{url:"@_id"})}]).factory("CartoDB",["$resource",function($resource){return $resource("cartodb/:table",{table:"@_id"})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/signin.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication","$window",function($scope,$http,$location,Users,Authentication,$window){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response,$window.location.reload()},function(response){$scope.error=response.data.message})},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})},$scope.languages=[{id:"nl_NL",name:"Nederlands"},{id:"en_EN",name:"English"}]}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);